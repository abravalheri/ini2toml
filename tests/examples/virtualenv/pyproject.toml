[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "virtualenv"
description = "Virtual Python Environment builder"
authors = [{name = "Bernat Gabor", email = "gaborjbernat@gmail.com"}]
maintainers = [{name = "Bernat Gabor", email = "gaborjbernat@gmail.com"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 2",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]
keywords = ["virtual", "environments", "isolated"]
requires-python = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
dependencies = [
    "backports.entry_points_selectable>=1.0.4",
    "distlib>=0.3.1,<1",
    "filelock>=3.0.0,<4",
    "platformdirs>=2,<3",
    "six>=1.9.0,<2", # keep it >=1.9.0 as it may cause problems on LTS platforms
    'importlib-metadata>=0.12;python_version<"3.8"',
    'importlib-resources>=1.0;python_version<"3.7"',
    "pathlib2>=2.3.3,<3;python_version < '3.4' and sys.platform != 'win32'",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://virtualenv.pypa.io/"
Source = "https://github.com/pypa/virtualenv"
Tracker = "https://github.com/pypa/virtualenv/issues"

[project.entry-points."virtualenv.activate"]
bash = "virtualenv.activation.bash:BashActivator"
cshell = "virtualenv.activation.cshell:CShellActivator"
batch = "virtualenv.activation.batch:BatchActivator"
fish = "virtualenv.activation.fish:FishActivator"
powershell = "virtualenv.activation.powershell:PowerShellActivator"
python = "virtualenv.activation.python:PythonActivator"
nushell = "virtualenv.activation.nushell:NushellActivator"

[project.entry-points."virtualenv.create"]
venv = "virtualenv.create.via_global_ref.venv:Venv"
cpython3-posix = "virtualenv.create.via_global_ref.builtin.cpython.cpython3:CPython3Posix"
cpython3-win = "virtualenv.create.via_global_ref.builtin.cpython.cpython3:CPython3Windows"
cpython2-posix = "virtualenv.create.via_global_ref.builtin.cpython.cpython2:CPython2Posix"
cpython2-mac-framework = "virtualenv.create.via_global_ref.builtin.cpython.mac_os:CPython2macOsFramework"
cpython3-mac-framework = "virtualenv.create.via_global_ref.builtin.cpython.mac_os:CPython3macOsFramework"
cpython2-win = "virtualenv.create.via_global_ref.builtin.cpython.cpython2:CPython2Windows"
pypy2-posix = "virtualenv.create.via_global_ref.builtin.pypy.pypy2:PyPy2Posix"
pypy2-win = "virtualenv.create.via_global_ref.builtin.pypy.pypy2:Pypy2Windows"
pypy3-posix = "virtualenv.create.via_global_ref.builtin.pypy.pypy3:PyPy3Posix"
pypy3-win = "virtualenv.create.via_global_ref.builtin.pypy.pypy3:Pypy3Windows"

[project.entry-points."virtualenv.discovery"]
builtin = "virtualenv.discovery.builtin:Builtin"

[project.entry-points."virtualenv.seed"]
pip = "virtualenv.seed.embed.pip_invoke:PipInvoke"
app-data = "virtualenv.seed.embed.via_app_data.via_app_data:FromAppData"

[project.optional-dependencies]
docs = [
    "proselint>=0.10.2",
    "sphinx>=3",
    "sphinx-argparse>=0.2.5",
    "sphinx-rtd-theme>=0.4.3",
    "towncrier>=19.9.0rc1",
]
testing = [
    "coverage>=4",
    "coverage_enable_subprocess>=1",
    "flaky>=3",
    "pytest>=4",
    "pytest-env>=0.6.2",
    "pytest-freezegun>=0.4.1",
    "pytest-mock>=2",
    "pytest-randomly>=1",
    "pytest-timeout>=1",
    'packaging>=20.0;python_version>"3.4"',
]

[project.scripts]
virtualenv = "virtualenv.__main__:run_with_catch"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = true
platforms = ["any"]
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
"virtualenv.activation.bash" = ["*.sh"]
"virtualenv.activation.batch" = ["*.bat"]
"virtualenv.activation.cshell" = ["*.csh"]
"virtualenv.activation.fish" = ["*.fish"]
"virtualenv.activation.nushell" = ["*.nu"]
"virtualenv.activation.powershell" = ["*.ps1"]
"virtualenv.seed.wheels.embed" = ["*.whl"]

[tool.distutils.sdist]
formats = "gztar"

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
markers = ["slow"]
junit_family = "xunit2"
addopts = "--tb=auto -ra --showlocals --no-success-flaky-report"
env = """
PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
PYTHONIOENCODING=utf-8"""
